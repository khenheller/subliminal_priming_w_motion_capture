# ------- MAD --------
# Empty model
mad_empty <- lmer(mad_stn ~ 1 + (1|sub), mad_data)
# Mixed model
mad_data %>% ggplot(aes(x=sub, y=mad)) + geom_boxplot() # Sub seems to have rand effect.
mad_data %>% ggplot(aes(x=side, y=mad)) + geom_boxplot() # Side doesn't seem to have rand effect.
mad_mixed <- lmer(mad_stn ~ 1 + cond + (1|sub), mad_data)
summary(mad_mixed)
# --- X Position ----
# Empty model
empty_formula <- xpos_stn ~ 1 + (1|sub)
xpos_empty <- xpos_data %>% group_by(side) %>% group_by(zindex, .add=T) %>%
do(model=lmer(., formula=empty_formula))
source('model_stats.R')
library(multilevel)
library(tidyverse)
library(lme4)
library(R.matlab)
library(caret)
# Paths.
p <- list(EXP_FOLDER = getwd())
p$EXP_FOLDER <- getwd()
p$PROC_DATA_FOLDER <- paste0(p$EXP_FOLDER, "/../../processed_data/") # Processed data.
# Define.
p$DAY <- 'day2'
p$SUBS <- c(26,28,29,31,32,33,34,35,37,38) # to analyze.
p$PICKED_TRAJS <- c(1) # traj to analyze (1=to_target, 2=from_target, 3=to_prime, 4=from_prime).
traj_names <- read.csv(paste0(p$PROC_DATA_FOLDER, '/traj_names.csv'), header=F)
traj_names <- traj_names[p$PICKED_TRAJS,]
# Analyze each traj speratly.
#for (iTraj in 1:nrow(traj_names)){
iTraj = 1
print("@@@@ Make iteration for each traj. @@@@")
##-------------------------- Preprocessing -------------------------------
# ---- Reach Area ----
# Get data.
r_a_data <- read.csv(paste0(p$PROC_DATA_FOLDER,'/reach_area_',p$DAY,'_',traj_names[iTraj,1],'.csv'))
r_a_data <- type.convert(r_a_data) # Convert to categor.
r_a_data$sub <- as.factor(r_a_data$sub)
# Standardize
r_a_data <- r_a_data %>% mutate(across(where(is.numeric), scale, .names='{.col}_stn'))
sample_n(r_a_data, 20)
# ------- MAD --------
# Get data.
mad_data <- read.csv(paste0(p$PROC_DATA_FOLDER,'/mad_',p$DAY,'_',traj_names[iTraj,1],'.csv'))
mad_data <- type.convert(mad_data) # Convert to categor.
mad_data$sub <- as.factor(mad_data$sub)
# Standardize
mad_data <- mad_data %>% mutate(across(where(is.numeric), scale, .names='{.col}_stn'))
sample_n(mad_data, 10)
# --- X Position ----
# Get data.
xpos_data <- read.csv(paste0(p$PROC_DATA_FOLDER,'/xpos_',p$DAY,'_',traj_names[iTraj,1],'.csv'))
xpos_data <- type.convert(xpos_data) # Convert to categor.
xpos_data$sub <- as.factor(xpos_data$sub)
xpos_data$zindex <- as.factor(xpos_data$zindex)
# Flip left side xpos.
xpos_data$xpos_f <- ifelse(xpos_data$side=="left", xpos_data$xpos*-1, xpos_data$xpos)
# Standardize
xpos_data <- xpos_data %>% mutate(across(where(is.numeric), scale, .names='{.col}_stn'))
sample_n(xpos_data, 10)
##---------------- Descriptive statistics / Data Overview ----------------
# ---- Reach Area ----
# Calc statistics.
r_a_stats <- r_a_data %>%
group_by(cond) %>% summarize(mean = mean(reach_area), sd = sd(reach_area)) %>% ungroup()
r_a_stats
# Visualize.
r_a_data %>% ggplot(aes(x=reach_area, color=cond, fill=cond)) + geom_histogram(alpha=0.4, position="identity", bins=200) + theme_minimal() + theme(text=element_text(size=15))
# ------- MAD --------
# Calc statistics.
mad_stats <- mad_data %>%
group_by(side, cond) %>% summarize(mean = mean(mad), sd = sd(mad)) %>% ungroup()
mad_stats
# Visualize.
mad_data %>% ggplot(aes(x=mad, color=cond, fill=cond)) + geom_histogram(alpha=0.4, position="identity", bins=200) + theme_minimal() + theme(text=element_text(size=15)) + facet_wrap(~side)
# --- X Position ----
# Calc statistics.
xpos_stats <- xpos_data %>%
group_by(zindex, side, cond) %>% summarize(mean = mean(xpos), sd = sd(xpos)) %>% ungroup()
xpos_stats
# Visualize.
#xpos_data %>% ggplot(aes(x=zindex, y=xpos, color=cond, fill=cond)) + geom_point() + theme_minimal() + theme(text=element_text(size=15)) + facet_wrap(~side)
##--------------------------- Model Fitting ------------------------------
# ---- Reach Area ----
# Empty model
r_a_empty <- lmer(reach_area_stn ~ 1 + (1|sub), r_a_data)
# Mixed model
r_a_data %>% ggplot(aes(x=sub, y=reach_area)) + geom_boxplot() # Look if sub seems to have rand effect.
r_a_mixed <- lmer(reach_area_stn ~ 1 + cond + (1|sub), r_a_data)
summary(r_a_mixed)
# ------- MAD --------
# Empty model
mad_empty <- lmer(mad_stn ~ 1 + (1|sub), mad_data)
# Mixed model
mad_data %>% ggplot(aes(x=sub, y=mad)) + geom_boxplot() # Sub seems to have rand effect.
mad_data %>% ggplot(aes(x=side, y=mad)) + geom_boxplot() # Side doesn't seem to have rand effect.
mad_mixed <- lmer(mad_stn ~ 1 + cond + (1|sub), mad_data)
summary(mad_mixed)
# --- X Position ----
# Empty model
empty_formula <- xpos_stn ~ 1 + (1|sub)
xpos_empty <- xpos_data %>% group_by(side) %>% group_by(zindex, .add=T) %>%
do(model=lmer(., formula=empty_formula))
View(xpos_empty)
#xpos_empty2 <- by(xpos_data, xpos_data$zindex, lmer, formula=empty_formula)
# Mixed model
look_range <- c(100:110)
mix_formula <- xpos_stn ~ 1 + cond + (1|sub)
xpos_mixed <- xpos_data %>% group_by(side) %>% group_by(zindex, .add=T) %>%
do(model=lmer(.,formula=mix_formula))
length(xpos_mixed)
size(xpos_mixed)
?hiehgt
height(xpos_mixed)
hieght(xpos_mixed)
xpos_mixed.nrow
xpos_mixed$nrow
nrow(xpos_mixed)
# --- X Position ----
for j in nrow(xpos_mixed){
xpos_anova[j] <- anova(xpos_empty$model[j], xpos_mixed$model[j])
}
# --- X Position ----
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[j], xpos_mixed$model[j])
}
xpos_empty$model[1]
anova(xpos_empty$model[1], xpos_mixed$model[1])
anova(xpos_empty$model[1], xpos_mixed$model[1], test="chi")
xpos_empty$model[1]
xpos_empty$model[1]
r_a_empty
xpos_empty$model[1][1]
unlist(xpos_empty$model[1])
xpos_empty[1,3]
xpos_empty[1,3,1]
xpos_empty[1,3,1,1]
xpos_empty[1]
xpos_empty$model[1]
xpos_empty$model[[1]]
anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
# --- X Position ----
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
# --- X Position ----
xpos_anova
# --- X Position ----
xpos_anova = []
# --- X Position ----
xpos_anova = Null
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
xpos_anova[1]
# --- X Position ----
xpos_anova = numeric(nrow(xpos_mixed))
# --- X Position ----
xpos_anova = numeric(nrow(xpos_mixed),1)
?numeric
# --- X Position ----
xpos_anova = numeric(nrow(xpos_mixed))
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
# --- X Position ----
xpos_anova = numeric(nrow(xpos_mixed))
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
View(r_a_empty)
# --- X Position ----
xpos_anova <- lapply(rep("S4", nrow(xpos_mixed)), new)
?lapply
?`rep,Matrix-method`
?rep
rep("S4", nrow(xpos_mixed))
lapply(rep("S4", nrow(xpos_mixed)), new)
# --- X Position ----
xpos_anova <- lapply(rep("lmerMod", nrow(xpos_mixed)), new)
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
View(xpos_anova)
for (j in nrow(xpos_mixed)){
xpos_anova[[j]] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
xpos_anova[1]
xpos_anova[[1]]
# --- X Position ----
xpos_anova <- lapply(rep("lmerMod", nrow(xpos_mixed)), new)
# --- X Position ----
xpos_anova$left <- lapply(rep("lmerMod", nrow(xpos_mixed)/2), new)
xpos_anova$left <- lapply(rep("lmerMod", nrow(xpos_mixed)/2), new)
# --- X Position ----
xpos_anova$left <- lapply(rep("lmerMod", nrow(xpos_mixed)/2), new)
xpos_anova$right <- lapply(rep("lmerMod", nrow(xpos_mixed)/2), new)
nrow(xpos_mixed)/2 + j
nrow(xpos_mixed)/2
(nrow(xpos_mixed)/2) + j
j
for (j in nrow(xpos_mixed)/2){
xpos_anova$left[[j]] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
xpos_anova$right[[nrow(xpos_mixed)/2 + j]] <- anova(xpos_empty$model[[nrow(xpos_mixed)/2 + j]], xpos_mixed$model[[nrow(xpos_mixed)/2 + j]])
}
xpos_anova$left[[1]]
View(xpos_anova)
View(r_a_stats)
View(xpos_anova)
View(xpos_anova)
rm(xpos_anova)
# --- X Position ----
xpos_anova$left <- lapply(rep("lmerMod", nrow(xpos_mixed)/2), new)
xpos_anova$right <- lapply(rep("lmerMod", nrow(xpos_mixed)/2), new)
head(xpos_data)
sample(xpos_data, 10)
sample_n(xpos_data, 10)
data <- sample_n(select(xpos_data, -xpos_f, -xpos_stn, -xpos_f_stn))
data <- sample_n(select(xpos_data, -xpos_f, -xpos_stn, -xpos_f_stn), 10)
data
data <- sort(data, side)
data <- sort(data)
data <- order(data)
data
data <- sample_n(select(xpos_data, -xpos_f, -xpos_stn, -xpos_f_stn), 10)
data
sample_n(xpos_empty, 3)
xpos_empty
View(xpos_mixed)
xpos_mixed
# --- X Position ----
for (j in nrow(xpos_mixed)){
xpos_anova <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
xpos_anova
# LOOCV @@@@@@@@@@@@@@ Im not sure how to do this for mixed model @@@@@@@@@@@@@@@@@@@@@@@
#loocv(reach_area ~ 1 + cond + (1|sub), r_a_data, r_a_data$reach_area)
# ------- MAD --------
anova(mad_empty, mad_mixed, test="chi")
xpos_anova
# --- X Position ----
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
}
xpos_anova
nrow(xpos_mixed)
# --- X Position ----
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
j
}
j
print(j)
# --- X Position ----
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
rm(xpos_anova)
# --- X Position ----
for (j in nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
# --- X Position ----
for (j in nrow(xpos_mixed)){
anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
# --- X Position ----
for (j in 1:nrow(xpos_mixed)){
anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
# --- X Position ----
for (j in 1:nrow(xpos_mixed)){
xpos_anova[j] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
# --- X Position ----
for (j in 1:nrow(xpos_mixed)){
xpos_anova <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
View(xpos_anova)
# --- X Position ----
for (j in 1:nrow(xpos_mixed)){
xpos_anova <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
xpos_anova
View(xpos_anova)
# --- X Position ----
for (j in 1:nrow(xpos_mixed)){
xpos_anova[j:j+1] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
xpos_anova
rm(xpos_anova)
# --- X Position ----
for (j in 1:nrow(xpos_mixed)){
xpos_anova[j:j+1,] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
# --- X Position ----
xpos_anova <- anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
for (j in 1:nrow(xpos_mixed)){
xpos_anova[j:j+1,] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
xpos_anova
xpos_anova[1]
xpos_anova[1,]
xpos_anova[201,]
xpos_anova[250,]
xpos_anova[400,]
# LOOCV @@@@@@@@@@@@@@ Im not sure how to do this for mixed model @@@@@@@@@@@@@@@@@@@@@@@
#loocv(reach_area ~ 1 + cond + (1|sub), r_a_data, r_a_data$reach_area)
# ------- MAD --------
anova(mad_empty, mad_mixed, test="chi")
# --- X Position ----
xpos_anova[j][1:2] <- anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
# --- X Position ----
xpos_anova[j,1][1:2] <- anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
# --- X Position ----
xpos_anova[j,1][1:2,] <- anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
rm(xxpos_anova)
rm(xpos_anova)
# --- X Position ----
xpos_anova[j,1][1:2,] <- anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
# --- X Position ----
xpos_anova <- anova(xpos_empty$model[[1]], xpos_mixed$model[[1]], test="chi")
# --- X Position ----
xpos_anova = 1
# --- X Position ----
xpos_anova <- 1
for (j in 1:nrow(xpos_mixed)){
xpos_anova[j][1:2] <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
print(j)
}
xpos_anova
View(xpos_anova)
source('D:/university/mudrick_lab/subliminal_priming_w_motion_capture/analysis/analysis_code/r_code/main.R')
debugSource('D:/university/mudrick_lab/subliminal_priming_w_motion_capture/analysis/analysis_code/r_code/main.R')
j
j=1
temp <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
temp
xpos_anova[j][1:2] <- temp
xpos_anova
j=2
temp <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
temp
xpos_anova[j][1:2] <- temp
j=3
debugSource('D:/university/mudrick_lab/subliminal_priming_w_motion_capture/analysis/analysis_code/r_code/main.R', echo=TRUE)
temp <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
xpos_anova[j][1:2] <- temp
j
View(xpos_anova)
source('model_stats.R')
library(multilevel)
library(tidyverse)
library(lme4)
library(R.matlab)
library(caret)
# Paths.
p <- list(EXP_FOLDER = getwd())
p$EXP_FOLDER <- getwd()
p$PROC_DATA_FOLDER <- paste0(p$EXP_FOLDER, "/../../processed_data/") # Processed data.
# Define.
p$DAY <- 'day2'
p$SUBS <- c(26,28,29,31,32,33,34,35,37,38) # to analyze.
p$PICKED_TRAJS <- c(1) # traj to analyze (1=to_target, 2=from_target, 3=to_prime, 4=from_prime).
traj_names <- read.csv(paste0(p$PROC_DATA_FOLDER, '/traj_names.csv'), header=F)
traj_names <- traj_names[p$PICKED_TRAJS,]
# Analyze each traj speratly.
#for (iTraj in 1:nrow(traj_names)){
iTraj = 1
print("@@@@ Make iteration for each traj. @@@@")
##-------------------------- Preprocessing -------------------------------
# ---- Reach Area ----
# Get data.
r_a_data <- read.csv(paste0(p$PROC_DATA_FOLDER,'/reach_area_',p$DAY,'_',traj_names[iTraj,1],'.csv'))
r_a_data <- type.convert(r_a_data) # Convert to categor.
r_a_data$sub <- as.factor(r_a_data$sub)
# Standardize
r_a_data <- r_a_data %>% mutate(across(where(is.numeric), scale, .names='{.col}_stn'))
sample_n(r_a_data, 20)
# ------- MAD --------
# Get data.
mad_data <- read.csv(paste0(p$PROC_DATA_FOLDER,'/mad_',p$DAY,'_',traj_names[iTraj,1],'.csv'))
mad_data <- type.convert(mad_data) # Convert to categor.
mad_data$sub <- as.factor(mad_data$sub)
# Standardize
mad_data <- mad_data %>% mutate(across(where(is.numeric), scale, .names='{.col}_stn'))
sample_n(mad_data, 10)
# --- X Position ----
# Get data.
xpos_data <- read.csv(paste0(p$PROC_DATA_FOLDER,'/xpos_',p$DAY,'_',traj_names[iTraj,1],'.csv'))
xpos_data <- type.convert(xpos_data) # Convert to categor.
xpos_data$sub <- as.factor(xpos_data$sub)
xpos_data$zindex <- as.factor(xpos_data$zindex)
# Flip left side xpos.
xpos_data$xpos_f <- ifelse(xpos_data$side=="left", xpos_data$xpos*-1, xpos_data$xpos)
# Standardize
xpos_data <- xpos_data %>% mutate(across(where(is.numeric), scale, .names='{.col}_stn'))
sample_n(xpos_data, 10)
##---------------- Descriptive statistics / Data Overview ----------------
# ---- Reach Area ----
# Calc statistics.
r_a_stats <- r_a_data %>%
group_by(cond) %>% summarize(mean = mean(reach_area), sd = sd(reach_area)) %>% ungroup()
r_a_stats
# Visualize.
r_a_data %>% ggplot(aes(x=reach_area, color=cond, fill=cond)) + geom_histogram(alpha=0.4, position="identity", bins=200) + theme_minimal() + theme(text=element_text(size=15))
# ------- MAD --------
# Calc statistics.
mad_stats <- mad_data %>%
group_by(side, cond) %>% summarize(mean = mean(mad), sd = sd(mad)) %>% ungroup()
mad_stats
# Visualize.
mad_data %>% ggplot(aes(x=mad, color=cond, fill=cond)) + geom_histogram(alpha=0.4, position="identity", bins=200) + theme_minimal() + theme(text=element_text(size=15)) + facet_wrap(~side)
# --- X Position ----
# Calc statistics.
xpos_stats <- xpos_data %>%
group_by(zindex, side, cond) %>% summarize(mean = mean(xpos), sd = sd(xpos)) %>% ungroup()
xpos_stats
# Visualize.
#xpos_data %>% ggplot(aes(x=zindex, y=xpos, color=cond, fill=cond)) + geom_point() + theme_minimal() + theme(text=element_text(size=15)) + facet_wrap(~side)
##--------------------------- Model Fitting ------------------------------
# ---- Reach Area ----
# Empty model
r_a_empty <- lmer(reach_area_stn ~ 1 + (1|sub), r_a_data)
# Mixed model
r_a_data %>% ggplot(aes(x=sub, y=reach_area)) + geom_boxplot() # Look if sub seems to have rand effect.
r_a_mixed <- lmer(reach_area_stn ~ 1 + cond + (1|sub), r_a_data)
summary(r_a_mixed)
# ------- MAD --------
# Empty model
mad_empty <- lmer(mad_stn ~ 1 + (1|sub), mad_data)
# Mixed model
mad_data %>% ggplot(aes(x=sub, y=mad)) + geom_boxplot() # Sub seems to have rand effect.
mad_data %>% ggplot(aes(x=side, y=mad)) + geom_boxplot() # Side doesn't seem to have rand effect.
mad_mixed <- lmer(mad_stn ~ 1 + cond + (1|sub), mad_data)
summary(mad_mixed)
# --- X Position ----
# Empty model
empty_formula <- xpos_stn ~ 1 + (1|sub)
xpos_empty <- xpos_data %>% group_by(side) %>% group_by(zindex, .add=T) %>%
do(model=lmer(., formula=empty_formula))
#xpos_empty2 <- by(xpos_data, xpos_data$zindex, lmer, formula=empty_formula)
# Mixed model
look_range <- c(100:110)
xpos_data %>% filter(zindex %in% look_range) %>% ggplot(aes(x=sub, y=xpos_f)) + geom_boxplot() + facet_wrap("zindex") # Sub seems to have rand effect.
xpos_data %>% filter(zindex %in% look_range) %>% ggplot(aes(x=side, y=xpos_f)) + geom_boxplot() + facet_wrap("zindex") # Side seems to have rand effect.
mix_formula <- xpos_stn ~ 1 + cond + (1|sub)
xpos_mixed <- xpos_data %>% group_by(side) %>% group_by(zindex, .add=T) %>%
do(model=lmer(.,formula=mix_formula))
##------------------------- Model comparison -----------------------------
# ---- Reach Area ----
# ANOVA
anova(r_a_empty, r_a_mixed, test="chi")
# LOOCV @@@@@@@@@@@@@@ Im not sure how to do this for mixed model @@@@@@@@@@@@@@@@@@@@@@@
#loocv(reach_area ~ 1 + cond + (1|sub), r_a_data, r_a_data$reach_area)
# ------- MAD --------
anova(mad_empty, mad_mixed, test="chi")
j=1
temp <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
xpos_anova[j][1:2] <- temp
j=2
temp <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
xpos_anova[j][1:2] <- temp
j=3
temp <- anova(xpos_empty$model[[j]], xpos_mixed$model[[j]])
xpos_anova[j][1:2] <- temp
xpos_anova[j]
xpos_data %>%
nest(-zindex)
xpos_data %>%
nest(-side) %>%
nest(-zindex) %>%
xpos_data %>%
nest(-side) %>%
nest(-zindex)
xpos_data_left <- select(xpos_data, side==left)
?select
library(dplyr)
xpos_data_left <- select(xpos_data, side==left)
?filter
xpos_data_left <- filter(xpos_data, side==left)
xpos_data_left <- filter(xpos_data, side=="left")
xpos_data_right <- filter(xpos_data, side=="right")
library(dplyr)
library(tidyr)
library(purrr)
xpos_data_left <- filter(xpos_data, side=="left")
xpos_data_right <- filter(xpos_data, side=="right")
xpos_data_left %>%
nest(-zindex) %>%
mutate(model = map(data, ~anova(lmer(mix_formula, .))),
tidy = map(model, tidy)) %>%
select(zindex, td) %>%
unnest()
xpos_data_left %>%
nest(-zindex) %>%
mutate(model = map(data, ~anova(lmer(mix_formula, .))),
tidy = map(model, broom::tidy)) %>%
select(zindex, tidy) %>%
unnest(tidy)
