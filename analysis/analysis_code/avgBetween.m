% Calc average between subjects.
function [subs_avg] = avgBetween(traj_name, p)
    % Init vars.
    subs_avg.traj.con_left  = zeros(p.NORM_FRAMES, 3);
    subs_avg.traj.con_right = zeros(p.NORM_FRAMES, 3);
    subs_avg.traj.incon_left  = zeros(p.NORM_FRAMES, 3);
    subs_avg.traj.incon_right = zeros(p.NORM_FRAMES, 3);
    subs_avg.rt.con_left  = 0;
    subs_avg.rt.con_right = 0;
    subs_avg.rt.incon_left  = 0;
    subs_avg.rt.incon_right = 0;
    subs_avg.react.con_left  = 0;
    subs_avg.react.con_right = 0;
    subs_avg.react.incon_left  = 0;
    subs_avg.react.incon_right = 0;
    subs_avg.mt.con_left  = 0;
    subs_avg.mt.con_right = 0;
    subs_avg.mt.incon_left  = 0;
    subs_avg.mt.incon_right = 0;
    subs_avg.fc_prime.con = 0;
    subs_avg.fc_prime.incon = 0;
    subs_avg.pas.con = [0 0 0 0]; % 4 lvls of pas.
    subs_avg.pas.incon = [0 0 0 0];
    subs_avg.mad.con_left  = 0;
    subs_avg.mad.con_right = 0;
    subs_avg.mad.incon_left  = 0;
    subs_avg.mad.incon_right = 0;
    subs_avg.mad_p.con_left  = zeros(1, 3);
    subs_avg.mad_p.con_right = zeros(1, 3);
    subs_avg.mad_p.incon_left  = zeros(1, 3);
    subs_avg.mad_p.incon_right = zeros(1, 3);
    subs_avg.reach_area.con = 0;
    subs_avg.reach_area.incon = 0;
    subs_avg.x_std.con_left  = zeros(p.NORM_FRAMES,1);
    subs_avg.x_std.con_right = zeros(p.NORM_FRAMES,1);
    subs_avg.x_std.incon_left  = zeros(p.NORM_FRAMES,1);
    subs_avg.x_std.incon_right = zeros(p.NORM_FRAMES,1);
    subs_avg.x_avg_std.con_left  = 0;
    subs_avg.x_avg_std.con_right = 0;
    subs_avg.x_avg_std.incon_left  = 0;
    subs_avg.x_avg_std.incon_right = 0;
    
    reach_area = load([p.PROC_DATA_FOLDER '/reach_area_' traj_name{1} '_' p.DAY '_subs_' p.SUBS_STRING '.mat']);  reach_area = reach_area.reach_area;
    good_subs = load([p.PROC_DATA_FOLDER '/good_subs_' p.DAY '_' traj_name{1} '_subs_' p.SUBS_STRING '.mat']);  good_subs = good_subs.good_subs;
    
    for iSub = good_subs
        % load avg within subject.
        avg = load([p.PROC_DATA_FOLDER '/sub' num2str(iSub) p.DAY '_' 'avg_' traj_name{1}]);  avg = avg.avg;
        % sum to calc avg between subjects.
        subs_avg.traj.con_left  = subs_avg.traj.con_left  + avg.traj.con_left;
        subs_avg.traj.con_right = subs_avg.traj.con_right + avg.traj.con_right;
        subs_avg.traj.incon_left  = subs_avg.traj.incon_left  + avg.traj.incon_left;
        subs_avg.traj.incon_right = subs_avg.traj.incon_right + avg.traj.incon_right;
        subs_avg.rt.con_left  = subs_avg.rt.con_left  + avg.rt.con_left;
        subs_avg.rt.con_right = subs_avg.rt.con_right + avg.rt.con_right;
        subs_avg.rt.incon_left  = subs_avg.rt.incon_left  + avg.rt.incon_left;
        subs_avg.rt.incon_right = subs_avg.rt.incon_right + avg.rt.incon_right;
        subs_avg.react.con_left  = subs_avg.react.con_left  + avg.react.con_left;
        subs_avg.react.con_right = subs_avg.react.con_right + avg.react.con_right;
        subs_avg.react.incon_left  = subs_avg.react.incon_left  + avg.react.incon_left;
        subs_avg.react.incon_right = subs_avg.react.incon_right + avg.react.incon_right;
        subs_avg.mt.con_left  = subs_avg.mt.con_left  + avg.mt.con_left;
        subs_avg.mt.con_right = subs_avg.mt.con_right + avg.mt.con_right;
        subs_avg.mt.incon_left  = subs_avg.mt.incon_left  + avg.mt.incon_left;
        subs_avg.mt.incon_right = subs_avg.mt.incon_right + avg.mt.incon_right;
        subs_avg.fc_prime.con = subs_avg.fc_prime.con + avg.fc_prime.con;
        subs_avg.fc_prime.incon = subs_avg.fc_prime.incon + avg.fc_prime.incon;
        subs_avg.pas.con = subs_avg.pas.con + avg.pas.con;
        subs_avg.pas.incon = subs_avg.pas.incon + avg.pas.incon;
        subs_avg.mad.con_left  = subs_avg.mad.con_left  + avg.mad.con_left;
        subs_avg.mad.con_right = subs_avg.mad.con_right + avg.mad.con_right;
        subs_avg.mad.incon_left  = subs_avg.mad.incon_left  + avg.mad.incon_left;
        subs_avg.mad.incon_right = subs_avg.mad.incon_right + avg.mad.incon_right;
        subs_avg.mad_p.con_left  = subs_avg.mad_p.con_left  + avg.mad_p.con_left;
        subs_avg.mad_p.con_right = subs_avg.mad_p.con_right + avg.mad_p.con_right;
        subs_avg.mad_p.incon_left  = subs_avg.mad_p.incon_left  + avg.mad_p.incon_left;
        subs_avg.mad_p.incon_right = subs_avg.mad_p.incon_right + avg.mad_p.incon_right;
        subs_avg.x_std.con_left  = subs_avg.x_std.con_left  + avg.x_std.con_left;
        subs_avg.x_std.con_right = subs_avg.x_std.con_right + avg.x_std.con_right;
        subs_avg.x_std.incon_left  = subs_avg.x_std.incon_left  + avg.x_std.incon_left;
        subs_avg.x_std.incon_right = subs_avg.x_std.incon_right + avg.x_std.incon_right;
        subs_avg.x_avg_std.con_left  = subs_avg.x_avg_std.con_left  + avg.x_avg_std.con_left;
        subs_avg.x_avg_std.con_right = subs_avg.x_avg_std.con_right + avg.x_avg_std.con_right;
        subs_avg.x_avg_std.incon_left  = subs_avg.x_avg_std.incon_left  + avg.x_avg_std.incon_left;
        subs_avg.x_avg_std.incon_right = subs_avg.x_avg_std.incon_right + avg.x_avg_std.incon_right;
    end
    subs_avg.traj.con_left  = subs_avg.traj.con_left  / length(good_subs);
    subs_avg.traj.con_right = subs_avg.traj.con_right / length(good_subs);
    subs_avg.traj.incon_left  = subs_avg.traj.incon_left  / length(good_subs);
    subs_avg.traj.incon_right = subs_avg.traj.incon_right / length(good_subs);
    subs_avg.rt.con_left  = subs_avg.rt.con_left  / length(good_subs);
    subs_avg.rt.con_right = subs_avg.rt.con_right / length(good_subs);
    subs_avg.rt.incon_left  = subs_avg.rt.incon_left  / length(good_subs);
    subs_avg.rt.incon_right = subs_avg.rt.incon_right / length(good_subs);
    subs_avg.react.con_left  = subs_avg.react.con_left  / length(good_subs);
    subs_avg.react.con_right = subs_avg.react.con_right / length(good_subs);
    subs_avg.react.incon_left  = subs_avg.react.incon_left  / length(good_subs);
    subs_avg.react.incon_right = subs_avg.react.incon_right / length(good_subs);
    subs_avg.mt.con_left  = subs_avg.mt.con_left  / length(good_subs);
    subs_avg.mt.con_right = subs_avg.mt.con_right / length(good_subs);
    subs_avg.mt.incon_left  = subs_avg.mt.incon_left  / length(good_subs);
    subs_avg.mt.incon_right = subs_avg.mt.incon_right / length(good_subs);
    subs_avg.fc_prime.con = subs_avg.fc_prime.con / length(good_subs);
    subs_avg.fc_prime.incon = subs_avg.fc_prime.incon / length(good_subs);
    subs_avg.pas.con = subs_avg.pas.con / length(good_subs);
    subs_avg.pas.incon = subs_avg.pas.incon / length(good_subs);
    subs_avg.mad.con_left  = subs_avg.mad.con_left  / length(good_subs);
    subs_avg.mad.con_right = subs_avg.mad.con_right / length(good_subs);
    subs_avg.mad.incon_left  = subs_avg.mad.incon_left  / length(good_subs);
    subs_avg.mad.incon_right = subs_avg.mad.incon_right / length(good_subs);
    subs_avg.mad_p.con_left  = subs_avg.mad_p.con_left  / length(good_subs);
    subs_avg.mad_p.con_right = subs_avg.mad_p.con_right / length(good_subs);
    subs_avg.mad_p.incon_left  = subs_avg.mad_p.incon_left  / length(good_subs);
    subs_avg.mad_p.incon_right = subs_avg.mad_p.incon_right / length(good_subs);
    subs_avg.reach_area.con = mean(reach_area.con);
    subs_avg.reach_area.incon = mean(reach_area.incon);
    subs_avg.x_std.con_left  = subs_avg.x_std.con_left  / length(good_subs);
    subs_avg.x_std.con_right = subs_avg.x_std.con_right / length(good_subs);
    subs_avg.x_std.incon_left  = subs_avg.x_std.incon_left  / length(good_subs);
    subs_avg.x_std.incon_right = subs_avg.x_std.incon_right / length(good_subs);
    subs_avg.x_avg_std.con_left  = subs_avg.x_avg_std.con_left  / length(good_subs);
    subs_avg.x_avg_std.con_right = subs_avg.x_avg_std.con_right / length(good_subs);
    subs_avg.x_avg_std.incon_left  = subs_avg.x_avg_std.incon_left  / length(good_subs);
    subs_avg.x_avg_std.incon_right = subs_avg.x_avg_std.incon_right / length(good_subs);
end